name: Noodband genereren

on:
  workflow_dispatch:

jobs:
  record-audio:
    runs-on: ubuntu-latest
    steps:
      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Record audio
        run: |
          ffmpeg -i https://icecast.zuidwestfm.nl/zuidwest.stl -t 00:10:00 -acodec copy audio.m4a

      - name: Upload recorded audio
        uses: actions/upload-artifact@v4
        with:
          name: recorded-audio
          path: audio.m4a

  process-audio:
    runs-on: windows-latest
    needs: record-audio
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Input and Output Directories
        shell: pwsh
        run: |
          New-Item -ItemType directory -Path "${{ github.workspace }}/input" -Force
          New-Item -ItemType directory -Path "${{ github.workspace }}/output" -Force

      - name: Download Recorded Audio
        uses: actions/download-artifact@v4
        with:
          name: recorded-audio
          path: "${{ github.workspace }}/input"

      - name: Download Thimeo WatchCat Installer
        run: Invoke-WebRequest -Uri "https://www.stereotool.com/download/ThimeoWatchCat_installer_64.exe" -OutFile "ThimeoWatchCat_installer_64.exe"

      - name: Install Thimeo WatchCat
        shell: pwsh
        run: |
          Start-Process -FilePath ".\ThimeoWatchCat_installer_64.exe" -ArgumentList '/S'
          Start-Sleep -Seconds 15

      - name: Copy WatchCat.ini to AppData
        shell: pwsh
        run: |
          $sourcePath = "${{ github.workspace }}/WatchCat.ini"
          $destPath = "$HOME/AppData/Roaming/Thimeo Audio Technology B.V./WatchCat.ini"
          New-Item -ItemType Directory -Path "$HOME/AppData/Roaming/Thimeo Audio Technology B.V." -Force
          Copy-Item -Path $sourcePath -Destination $destPath

      - name: Check config file and display contents
        shell: pwsh
        run: |
          $configPath = "$HOME/AppData/Roaming/Thimeo Audio Technology B.V./WatchCat.ini"
          if (Test-Path $configPath) {
            Get-Content $configPath
          } else {
            Write-Output "Config file does not exist."
          }

      - name: Run Thimeo WatchCat to generate audio file
        shell: pwsh
        run: |
          $exePath = "C:\Program Files\Thimeo\WatchCat\ThimeoWatchCat.exe"
          if (Test-Path $exePath) {
            $process = Start-Process -FilePath $exePath -PassThru
            Write-Output "ThimeoWatchCat.exe started with PID: $($process.Id)"
          } else {
            Write-Output "ThimeoWatchCat.exe not found."
          }

      - name: Take Screenshot
        shell: pwsh
        run: |
          Start-Sleep -Seconds 30
          ./screenshot.ps1

      - name: Upload Screenshot
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: "C:/ScreenCapture"

      - name: Waiting for WatchCat to finish
        shell: pwsh
        run: |
          $processedPath = "${{ github.workspace }}/input/Processed"
          $failedPath = "${{ github.workspace }}/input/Failed"

          while (-not (Test-Path $processedPath)) {
            if (Test-Path $failedPath) {
              Write-Output "Processing failed, 'Failed' directory found."
              exit 1
            }
            Start-Sleep -Seconds 10
            Write-Output "Waiting for 'Processed' directory to appear..."
          }

      - name: Output contents of the output directory
        shell: pwsh
        run: |
          Get-ChildItem "${{ github.workspace }}/output" | ForEach-Object { Write-Output $_.FullName }

      - name: Upload processed file
        uses: actions/upload-artifact@v4
        with:
          name: processed-audio
          path: "${{ github.workspace }}/output"

  upload-recorded-audio:
    runs-on: ubuntu-latest
    needs: process-audio
    steps:
      - name: Download recorded audio
        uses: actions/download-artifact@v4
        with:
          name: recorded-audio

  upload-processed-audio:
    runs-on: ubuntu-latest
    needs: process-audio
    steps:
      - name: Download processed audio
        uses: actions/download-artifact@v4
        with:
          name: processed-audio